name: hnefatafl
version: 0.0.0.2

spec-version: 0.35.0
verbatim:
  cabal-version: 2.4

language: GHC2021

default-extensions:
  - TemplateHaskell
  - OverloadedStrings
  - OverloadedRecordDot
  - OverloadedLabels
  - DuplicateRecordFields
  - LambdaCase
  - DerivingVia
  - ImportQualifiedPost

ghc-options:
  - -Wunused-imports
  - -Wall
  - -Wmissing-export-lists
  - -Wmissing-home-modules
  - -Widentities
  - -Wpartial-fields
  - -Wcpp-undef
  - -Wno-orphans
  - -fprint-potential-instances
  - -threaded
  - -O2
  # Below is a magical incantation that allows linking against archive library ".a" files
  # https://stackoverflow.com/questions/36040366/haskell-cabal-include-static-library
  - -pgml g++ "-optl-Wl,--allow-multiple-definition" "-optl-Wl,--whole-archive" "-optl-Wl,-Bstatic" "-optl-Wl,-lhnefatafl" "-optl-Wl,-Bdynamic" "-optl-Wl,--no-whole-archive"

dependencies:
  - name: base
    #version: ">=4.15"
    mixin:
      - hiding (Prelude)
  - name: relude
    #version: ">= 1.1.0.0"
    mixin:
      - (Relude as Prelude)

  # old
  # - aeson
  # - array
  # - async
  # - containers
  # - deepseq
  # - generic-lens
  # - http-media
  # - http-types
  # - lucid2
  # - mtl
  # - parallel
  # - random
  # - raw-strings-qq
  # - servant
  # - servant-client
  # - servant-server
  # - servant-websockets
  # - split
  # - sqlite-simple
  # - stm
  # - storable-tuple
  # - template-haskell
  # - text
  # - time
  # - unagi-chan
  # - uuid
  # - vector
  # - vector-hashtables
  # - wai
  # - warp
  # - websockets
  # - wide-word
  # - wai-websockets
  # - resourcet
  # - lens
  # - storable-record

  # new
  - derive-storable
  - derive-storable-plugin
  # - QuickCheck
  # - annotated-exception
  # - attoparsec
  # - bytestring
  # - cassava
  # - deepseq
  # - envparse
  # - exceptions
  # - generic-optics
  # - generic-random
  # - http-client
  # - katip
  # - newtype-generics
  # - optics
  # - quickcheck-instances
  # - refined >= 0.7
  # - resourcet
  # - servant-lucid
  # - some

# executables:
#   app:
#     main: "Main.hs"
#     source-dirs: app
#     dependencies:
#       - hnefatafl
      
internal-libraries:
  bindings:
    source-dirs: bindings
    build-tools:
        tasty-discover:tasty-discover

tests:
  bindings-test:
    main: "Driver.hs"
    ghc-options: 
      - -Wno-missing-export-lists
    source-dirs: bindings-test
    build-tools:
        tasty-discover:tasty-discover
    dependencies:
      - bindings
      - hspec
      - hspec-expectations-pretty-diff
      - tasty
      - tasty-hunit
      - tasty-hspec
      - tasty-discover
#       - hspec
#       - hspec-contrib
#       - hspec-core
#       - hspec-wai
#       - HUnit
#       - tasty-hspec
#       - tasty-quickcheck
#      - quickcheck-instances
#      - QuickCheck

benchmarks:
  board:
    main: "Main.hs"
    source-dirs: bench
    dependencies:
      - hnefatafl
      - criterion
